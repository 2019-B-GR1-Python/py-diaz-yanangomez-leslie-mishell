{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Es hora de mi confiable conveniencia.\n",
      "\n",
      "Quiero guardar este momento en mi corazÃ³n.\n",
      "\n",
      "Que bien come el perro.\n",
      "Archivo completo: ['Es hora de mi confiable conveniencia.\\n', 'Quiero guardar este momento en mi corazÃ³n.\\n', 'Que bien come el perro.'] <class 'list'>\n"
     ]
    }
   ],
   "source": [
    "#  ARCHIVOS\n",
    "ruta_archivo = './frases.txt'\n",
    "try:\n",
    "    archivo_abierto = open(ruta_archivo)\n",
    "    '''\n",
    "    linea_uno = archivo_abierto.readline()\n",
    "    print(f'L1: {linea_uno}', type(linea_uno))\n",
    "    linea_dos = archivo_abierto.readline()\n",
    "    print(f'L2: {linea_dos}', type(linea_uno))\n",
    "    linea_tres = archivo_abierto.readline()\n",
    "    print(f'L3: {linea_tres}', type(linea_uno))\n",
    "    linea_no_existe = archivo_abierto.readline()\n",
    "    print(f'LNE: {linea_no_existe}', type(linea_no_existe))  # Devuelve string vacio\n",
    "    '''\n",
    "    archivo_completo = archivo_abierto.readlines();  # Devuelve una lista [] con las lineas del archivo\n",
    "    for linea in archivo_completo:\n",
    "        print(linea)\n",
    "        \n",
    "    print(f'Archivo completo: {archivo_completo}', type(archivo_completo))\n",
    "    \n",
    "    archivo_abierto.close()\n",
    "except Exception as error:\n",
    "    print('Ocurrio un error')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# ESCRIBIR ARCHIVO\n",
    "try:\n",
    "    archivo_escritura = open(ruta_archivo, mode=\"a\") \n",
    "    # a => Append (aniade)\n",
    "    # w => Write (sobre escribe)\n",
    "    archivo_escritura.write('Que belleza la de Grecia. \\n')\n",
    "    archivo_escritura.writelines([\n",
    "        'I am trying to find myself. \\n','Noran suseonhwa-eyo sarang-eul jusigil. \\n'\n",
    "    ])\n",
    "    archivo_escritura.close()\n",
    "except Exception as error:\n",
    "    print('Error archivo')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
